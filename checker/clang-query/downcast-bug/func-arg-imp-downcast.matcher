set bind-root     true
# set print-matcher true
# enable output     dump

match callExpr(hasAnyArgument(implicitCastExpr(hasImplicitDestinationType(asString('int')),has(anyOf(expr(unless(binaryOperator()),anyOf(hasType(asString('time_t')),hasType(asString('__time_t')))),binaryOperator(hasType(asString('long')),hasDescendant(anyOf(callExpr(unless(hasAnyArgument(expr(anyOf(hasType(asString('time_t')),hasType(asString('__time_t')))))),anyOf(hasType(asString('time_t')),hasType(asString('__time_t')))),expr(unless(hasAncestor(callExpr())),anyOf(hasType(asString('time_t')),hasType(asString('__time_t'))))))))))))

# 引数のいずれかが int 型の関数の呼び出し式のうち、引数に time_t 型の式を代入している式 への Matcher

# callExpr(
#     hasAnyArgument(implicitCastExpr(
#         hasImplicitDestinationType(asString('int')),
#         has(anyOf(
#             expr(
#                 unless(binaryOperator()),
#                 anyOf(
#                     hasType(asString('time_t')),
#                     hasType(asString('__time_t'))
#                 )
#             ),
#             binaryOperator(
#                 hasType(asString('long')),
#                 hasDescendant(anyOf(
#                     callExpr(
#                         unless(hasAnyArgument(expr(anyOf(
#                             hasType(asString('time_t')),
#                             hasType(asString('__time_t'))
#                         )))),
#                         anyOf(
#                             hasType(asString('time_t')),
#                             hasType(asString('__time_t'))
#                         )
#                     ),
#                     expr(
#                         unless(hasAncestor(callExpr())),
#                         anyOf(
#                             hasType(asString('time_t')),
#                             hasType(asString('__time_t'))
#                         )
#                     )
#                 ))
#             )
#         ))
#     ))
# )
